SELECT * FROM invoices; 

--Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT CustomerId, FirstName, LastName, country
FROM customers
WHERE country <> "USA" ; 

--Show only the Customers from Brazil.
SELECT *  
FROM customers 
WHERE country = "Brazil" ; 

--Find the Invoices of customers who are from Brazil. 
--The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT FirstName, LastName, InvoiceId, InvoiceDate, BillingCountry
FROM customers
LEFT JOIN invoices 
ON customers.customerId = invoices.CustomerId 
WHERE customers.Country = "Brazil" ; 

--Show the Employees who are Sales Agents.
SELECT * 
FROM employees 
WHERE employees.Title LIKE "%Agent%" ; 

--Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT (BillingCountry) 
FROM invoices ;  

--Provide a query that shows the invoices associated with each sales agent. 
--The resulting table should include the Sales Agent's full name.
SELECT invoices.InvoiceId, employees.FirstName, employees.LastName
FROM employees
JOIN customers
ON customers.SupportRepId = employees.EmployeeId
JOIN invoices  
ON invoices.CustomerId = customers.customerId ;


--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT customers.FirstName, customers.LastName, customers.Country, employees.FirstName, employees.LastName, invoices.Total
FROM customers 
JOIN employees
ON customers.SupportRepId = employees.EmployeeId
JOIN invoices 
ON invoices.CustomerId = Customers.CustomerId ; 


--How many Invoices were there in 2009?
SELECT COUNT(*)
FROM Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';


--What are the total sales for 2009?
SELECT SUM (Invoices.Total)
FROM invoices
WHERE InvoiceDate BETWEEN ' 2009-01-01' AND '2009-12-31' ; 


--Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name, Invoice_items.InvoiceLineId
FROM invoice_items
JOIN tracks
ON invoice_items.trackId = tracks.trackId ; 

--Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT artists.name as Artist, tracks.Name as Track, invoice_items.InvoiceLineId
FROM Invoice_items 
LEFT JOIN tracks 
ON invoice_items.TrackID = tracks.TrackID
INNER JOIN albums 
ON albums.AlbumID = tracks.AlbumID
LEFT JOIN artists 
ON artists.ArtistID = albums.ArtistID ;


--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS 'Track Name', albums.Title AS 'Album Title', media_types.Name AS 'Media Type', genres.Name AS 'Genre'
FROM tracks 
JOIN Albums 
on albums.AlbumId = tracks.AlbumId
JOIN Media_Types 
on media_types.MediaTypeId = tracks.MediaTypeId
JOIN Genres 
on genres.GenreId = tracks.GenreId ;

--Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName,
ROUND(SUM(Invoices.Total), 2) as 'Total Sales' 
FROM Employees 
JOIN Customers 
ON customers.SupportRepId = employees.EmployeeId
JOIN Invoices 
ON Invoices.CustomerId = customers.CustomerId
WHERE employees.Title = 'Sales Support Agent' 
GROUP BY employees.FirstName;

--Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName, employees.LastName,
ROUND(SUM(Invoices.Total), 2) as 'Total Sales' 
FROM Employees 
JOIN Customers 
ON customers.SupportRepId = employees.EmployeeId
JOIN Invoices 
ON Invoices.CustomerId = customers.CustomerId
WHERE employees.Title = 'Sales Support Agent' 
AND Invoices.InvoiceDate LIKE '2009%' 
GROUP BY employees.FirstName
ORDER BY (round(sum(Invoices.Total), 2))  DESC LIMIT 1;